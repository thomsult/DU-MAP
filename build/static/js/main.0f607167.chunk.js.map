{"version":3,"sources":["context.js","Viewer/Component/orbit.js","Viewer/Component/planete.js","Viewer/Data.js","Viewer/infoUsers.js","Viewer/Helios.js","Viewer/index.jsx","components/ReactDatComponent/component.js","components/ReactDatGui.js","App.js","serviceWorker.js","index.js"],"names":["IDContext","React","createContext","id","Safezone","pipe","orbit","changeInfo","state","value","_currentValue","Waypoint","Path","dispatch","parent","name","Scale","Orbit","props","Context","useContext","_useState","useState","_useState2","Object","slicedToArray","Hide","sethide","useBeforeRender","Planet_info","params","Vector3","Type","type","Moon","undefined","copyFrom","Planet","divArray","radius","Distance","i","push","Math","PI","newPath","y","length","cos","sin","react_default","a","createElement","alpha","setEnabled","isPickable","points","color","Color3","onCreated","lines","lookAt","Pipe","Aliot","fromArray","system","center","map","el","po","subtract","position","scene","useScene","_useState3","_useState4","transform","useRef","Tube","Promise","resolve","current","_children","find","includes","localMeshDirection","localMeshOrigin","ray","Ray","pickWithRay","mesh","computeWorldMatrix","pickedPoint","MeshBuilder","CreateTube","info","path","sideOrientation","Mesh","DOUBLESIDE","mat","StandardMaterial","diffuseColor","specularColor","material","val","_useState5","_useState6","loaded","setLoaded","Display","then","ref","debug","Satellites","satellites","moon","planete_Moon","key","bodyid","positionParent","react_babylonjs","segments","diameter","bodytype","infoData","systemId","PlanetTrigger","add","Fragment","_useClick","useClick","e","cameras","target","meshes","forEach","element","SetTarget","meshUnderPointer","PlanetRef","father","Planets","values","data","planete_Planet","isInSafeZone","GetAllData","_callee","fetcher","regenerator_default","wrap","_context","prev","next","fetch","response","json","catch","error","console","log","sent","abrupt","stop","FindBody","BodyId","helios","body","parseInt","ScaleValue","vec3","x","z","getPoints","_callee2","coordonner","_context2","parseCoordonner","result","coordonne","formatCoordonne","unformattedCoord","fields","replace","split","systemID","planetID","lat","parseFloat","long","height","_callee3","deg2rad","formatted","promise","_promise","_context3","planete","Center","totalDistance","globalX","globalY","globalZ","message","reject","MakePoint","Ref","Blue","Black","InfoUser","Point","setPoint","count","setcount","Coordonner","_ref","asyncToGenerator","mark","t0","all","Points","t1","_x4","apply","this","arguments","pointobj","infoUsers_MakePoint","centerSafeZone","SafeZone","safezonestate","hide","Radius","RectGui","forwardRef","_props$data","refel","background","cornerRadius","thickness","linkOffsetX","widthInPixels","heightInPixels","verticalAlignment","Control","VERTICAL_ALIGNMENT_TOP","top","onPointerDownObservable","_linkedMesh","text","fontSizeInPixels","onBeforeDrawObservable","distance","activeCamera","clone","_absolutePosition","toFixed","Helios","context","setWaypoint","setdata","refList","refWaypointList","useEffect","debugLayer","show","HeliosSystem","react","raw","onFullScreenRef","useCallback","linkWithMesh","getMeshByName","onFullScreenWaypointRef","temps","setInterval","clearInterval","idealHeight","window","innerHeight","idealWidth","innerWidth","Viewer","cubeTextureClone","texturesLoaded","setTexturesLoaded","node","coordinatesMode","Texture","SKYBOX_MODE","ambientColor","clearColor","Zero","beta","minZ","maxZ","lowerRadiusLimit","wheelPrecision","intensity","direction","Up","size","rootUrl","ReactDatGui","lang","src","obj","property","keys","toLowerCase","className","hasOwnProperty","match","checked","onChange","close","onClick","innerText","title","children","Component","DatGUI","main","image","setimage","display","_useState7","_useState8","IDWaypoint","_useState9","_useState10","ID","setID","OreToType","Ore","_img","img","_useState11","_useState12","descriptionhide","setdescriptionhide","_useState13","_useState14","Orehide","setOrehide","handlechange","onLoad","object","style","width","marginTop","marginLeft","cursor","maxHeight","component_ReactDatGui","Folder","alt","description","String","Classification","Biosphere","Habitability","Boolean","Atmosphere","In Safe Zone","ores","string","sort","b","defaultChecked","objectSpread","defineProperty","App","antialias","adaptToDeviceRatio","canvasId","contextType","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f607167.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\n  export const IDContext = React.createContext({\r\n    id: \"Alioth\",\r\n    Safezone:false,\r\n    pipe:false,\r\n    orbit:true,\r\n    changeInfo(state,value){\r\n      IDContext._currentValue[state] = value\r\n    },\r\n    Waypoint :null,\r\n    Path:[]\r\n\r\n\r\n  });\r\nexport const dispatch = (state)=>{\r\n//console.log(state.parent.name)\r\nif(state.parent.name!== \"Waypoint\"){\r\n  IDContext._currentValue.id = state.parent.name\r\n  IDContext._currentValue.Waypoint = null\r\n}\r\nelse{\r\n\r\n  IDContext._currentValue.Waypoint = state.name\r\n  IDContext._currentValue.id = state.parent.name\r\n}\r\n}\r\n\r\nexport const dispatchWaypoint = (value)=>{\r\n  IDContext._currentValue.Path.push(value)\r\n\r\n}","import React,{useRef,useState,useContext} from \"react\";\r\n\r\nimport { Vector3 } from \"@babylonjs/core\";\r\nimport { Color3} from \"@babylonjs/core/Maths/math.color\";\r\nimport { Ray,RayHelper,MeshBuilder,Mesh, StandardMaterial, } from \"babylonjs\";\r\nimport { Scene, Tube, useBeforeRender, useScene } from \"react-babylonjs\";\r\nimport { IDContext,reducer } from '../../context'\r\nconst Scale = 0.00005;\r\n\r\n\r\n function Orbit(props){\r\n\r\n\r\n    const Context = useContext(IDContext)\r\n    const [Hide,sethide] = useState(Context.orbit)\r\n  \r\n    useBeforeRender(()=>{\r\n  \r\n      sethide(Context.orbit)\r\n    })\r\n\r\n\r\n    const Planet_info = props.params\r\n    const parent = new Vector3(0,0,0)\r\n    const Type = props.type\r\n        const Moon = Type === undefined? new Vector3().copyFrom(parent):new Vector3().copyFrom(Planet_info)\r\n        const Planet = Type === undefined? new Vector3().copyFrom(Planet_info):new Vector3().copyFrom(parent)\r\n        \r\n        const distance =  Vector3.Distance(Planet,Moon)\r\n        const detail = 65;\r\n        const pieDiv = 2/detail;\r\n        const divArray = [];\r\n        const radius = distance\r\n            for(let i = 0; i < detail; i++){\r\n                divArray.push(Math.PI*(pieDiv*i));\r\n            }\r\n            const newPath= [];\r\n            for(let y = 0; y < divArray.length; y++){\r\n                newPath.push(new Vector3((radius * Math.cos(divArray[y])), (0), (radius * Math.sin(divArray[y]))));\r\n                }\r\n                newPath.push(newPath[0]);\r\n          return (\r\n            <lines\r\n            alpha={0.2}\r\n            setEnabled={Hide}\r\n            isPickable={false}\r\n            name={\"orbit\"}\r\n            points={newPath}\r\n            color={Type === undefined?new Color3(0,1,0):new Color3(1,1,1)}\r\n            onCreated={(lines)=>{lines.lookAt(Type === undefined?Planet:Moon)}}\r\n          />\r\n          )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nfunction Pipe(props){\r\n    const Aliot = new Vector3().fromArray(props.system[1].center.map((el) => el * Scale))//TargetDestination\r\n    const centerSafeZone = new Vector3(13771471*Scale,7364470.4372*Scale,-128971*Scale)\r\n    const po = Aliot.subtract(props.position) //destination\r\n    const pos = new Vector3(0,0,0) //origin\r\n    const scene = useScene()\r\n    \r\n    const Context = useContext(IDContext)\r\n    const [Hide,sethide] = useState(Context.pipe)\r\n  \r\n    useBeforeRender(()=>{\r\n  \r\n      sethide(Context.pipe)\r\n    })\r\n\r\n\r\nconst transform = useRef(null)\r\nconst  Tube =()=>{\r\n    return new Promise(resolve => {\r\n    if(transform.current !== null && scene){\r\n        const triggerPl = transform.current.parent._children[0]._children.find((el)=>el.name.includes(\"Trigger\"))\r\n       \r\n\r\n    let Path = []\r\n    var localMeshDirection = po;\r\n    var localMeshOrigin = new Vector3().copyFrom(props.position);\r\n    var length = 1000000000000;\r\n    var ray = new Ray(localMeshOrigin,localMeshDirection,length);\r\n    function predicate(mesh) {\r\n        if (mesh.name === \"SafeZone Trigger\") {\r\n            mesh.computeWorldMatrix()\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    \r\n    \r\n    var hit = scene.pickWithRay(ray,predicate);\r\n    Path = [localMeshOrigin,\r\n        hit.pickedPoint\r\n    ]\r\n    \r\n    \r\n    //console.log(\"read\",Path,transform,scene)\r\n    const radius = (5 * 200000)*Scale\r\nif (Path.length > 0 && transform.current !== null){\r\n        const mesh = new MeshBuilder.CreateTube(props.info.name[0]+\" pipe\",{path:Path,radius:radius,sideOrientation: Mesh.DOUBLESIDE},scene)\r\n    const mat = new StandardMaterial(props.info.name[0]+\"pipe mat\",scene)\r\n    mat.diffuseColor = new Color3(1, 1, 0)\r\n    mat.specularColor = new Color3(0, 0, 0)\r\n    mat.alpha = 0.14\r\n    mesh.material = mat\r\n    mesh.parent = transform.current\r\n    \r\n    resolve({state:true,val:\"ok\"})\r\n\r\n    } \r\n}})}\r\nconst [loaded,setLoaded] = useState(false);\r\nfunction Display(props){\r\n    \r\n    !loaded&&Tube().then((state)=>{setLoaded(state.state)})\r\n    return null\r\n}\r\n\r\n\r\n//setLoaded(true)\r\n//useBeforeRender(()=>drawray(scene))\r\n//name={props.info.name[0]+\" pipe\"} path={Path} radius={radius} sideOrientation={Mesh.DOUBLESIDE}\r\n//{path.length > 1&&<tube path={path} onCreated={(tube)=>{console.log(tube)}} radius={radius} name={props.info.name[0]+\" pipe\"} position={props.position} >\r\n//console.log(props.info)\r\n\r\nreturn <transformNode setEnabled={Hide} ref={transform} name={props.info.name[0]+\" pipe\"}><Display debug={true}/></transformNode>\r\n}\r\n\r\nexport {Orbit,Pipe}","import React,{useRef,useCallback, useState,useMemo, useContext} from \"react\";\r\nimport {Orbit,Pipe} from './orbit';\r\nimport {\r\n  \r\n  Camera,\r\n  Sphere,\r\n  TransformNode,\r\n  useBeforeRender,\r\n  useScene,\r\n  useClick,\r\n  Html,\r\n  \r\n} from \"react-babylonjs\";\r\nimport { Vector3,ActionManager,ExecuteCodeAction } from \"@babylonjs/core\";\r\nimport { Color3,Color4 } from \"@babylonjs/core/Maths/math.color\";\r\nimport {AdvancedDynamicTexture} from '@babylonjs/gui/2D'\r\nimport {Control} from '@babylonjs/gui';\r\n\r\nimport { IDContext,dispatch } from '../../context'\r\n\r\n\r\n\r\n\r\nconst Scale = 0.00005;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction SetTarget(mesh,scene) {\r\n  //console.log('sphere clicked',ev.meshUnderPointer.parent.name,ev.meshUnderPointer.id);\r\n  //console.log(\"old : \",scene.cameras[0].target.name)\r\n  //ChangeID(ev.meshUnderPointer.id)\r\n  //state.ID = ev.meshUnderPointer.id\r\n  dispatch(mesh)\r\n\r\n  \r\n  //document.getElementById('PlanetID').value  = ev.meshUnderPointer.id\r\n\r\n  scene.cameras[0].target.name!== undefined&&scene.meshes.forEach(element => {\r\n    if(element.name === scene.cameras[0].target.name){\r\n        //old Target\r\n        element.isPickable = true\r\n    }\r\n})\r\nscene.cameras[0].target = mesh\r\nscene.cameras[0].target.name = mesh.name\r\n//console.log(\"Triger\",scene.cameras[0].target,ev.meshUnderPointer)\r\nmesh.isPickable = false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Planet(props) {\r\n  const params = props.params;\r\n\r\n\r\n  const Satellites = () => {\r\n    if (\r\n      params &&\r\n      params.satellites !== undefined &&\r\n      params.satellites.length > 0\r\n    ) {\r\n      return params.satellites.map((moon) => (\r\n        <Moon\r\n          key={moon}\r\n          system={props.system}\r\n          bodyid={moon}\r\n          parent={params}\r\n          positionParent={new Vector3().fromArray(\r\n            params.center.map((el) => el * Scale)\r\n          )}\r\n        />\r\n      ));\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  return (\r\n    <Sphere\r\n      name={params.name[0]}\r\n      segments={12}\r\n      diameter={params.radius * 2 * Scale}\r\n      position={new Vector3().fromArray(params.center.map((el) => el * Scale))}\r\n      bodytype={params.type[0]}\r\n      infoData={params}\r\n      systemId={params.systemId}\r\n      bodyid={params.id}\r\n      satellites={params.satellites}\r\n      isPickable={false}\r\n    >\r\n      <standardMaterial\r\n        name={params.name[0]+\"mat\"}\r\n        diffuseColor={new Color3(0, 1, 0)}\r\n        specularColor={new Color3(0, 0, 0)}\r\n      />\r\n      <Satellites />\r\n      <PlanetTrigger parent={params}  />\r\n      \r\n    </Sphere>\r\n  );\r\n}\r\n\r\nfunction Moon(props) {\r\n\r\n  const params = props.system.find((moon) => moon.id === props.bodyid);\r\n  const positionParent = props.positionParent;\r\n  const center = new Vector3().fromArray(params.center.map((el) => el * Scale));\r\n  const position = new Vector3(0, 0, 0).add(center.subtract(positionParent));\r\n\r\n  return (\r\n    <><Sphere\r\n    \r\n      name={params.name[0]}\r\n      segments={12}\r\n      diameter={params.radius * 2 * Scale}\r\n      position={position}\r\n      bodytype={params.type[0]}\r\n      infoData={params}\r\n      systemId={params.systemId}\r\n      bodyid={params.id}\r\n    >\r\n      <standardMaterial\r\n        name={params.name[0]+\"mat\"}\r\n        diffuseColor={new Color3(1, 0, 0)}\r\n        specularColor={new Color3(0, 0, 0)}\r\n      />\r\n      <PlanetTrigger parent={params} moon />\r\n    </Sphere>\r\n    \r\n    <Orbit\r\n    params={position}\r\n    system={props.system}\r\n    /></>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction PlanetTrigger(props) {\r\n  //console.log(scene) \r\n  \r\n    \r\n  const Context = useContext(IDContext)\r\n  const [Hide,sethide] = useState(Context.Safezone)\r\n\r\n  useBeforeRender(()=>{\r\n\r\n    sethide(Context.Safezone)\r\n  })\r\n\r\n  const scene = useScene();\r\n\r\n\r\n  \r\n  const params = props.parent;\r\n  \r\n  const [PlanetRef] = useClick(e => {\r\n    SetTarget(e.meshUnderPointer,scene)\r\n    });\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <Sphere\r\n    ref={PlanetRef}\r\n      name={!props.moon?params.name[0] + \":Trigger\":params.name[0] + \":Trigger\"}\r\n      segments={12}\r\n      diameter={((params.radius+(!props.moon?500000:50000)) * 2) * Scale}//approximation\r\n      position={new Vector3(0, 0, 0)}\r\n      infoData={params}\r\n      systemId={params.systemId}\r\n      bodyid={params.id}\r\n      father={params.name[0]}\r\n    >\r\n      <standardMaterial\r\n        name={!props.moon?params.name[0] + \":Trigger mat\":params.name[0] + \":Trigger mat\"}\r\n        alpha={Hide?\"0.5\":\"0.05\"}\r\n        diffuseColor={new Color3(0, 0, 1)}\r\n        specularColor={new Color3(0, 0, 0)}\r\n      />\r\n      \r\n\r\n    </Sphere>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Planets(props) {\r\n  return Object.values(props.data).map((Planet_info) => {\r\n    if (Planet_info.type[0] === \"Planet\") {\r\n      return (\r\n        <TransformNode name={Planet_info.name[0]+\" node\"} key={Planet_info.id}><Planet\r\n          params={Planet_info}\r\n         \r\n          system={Object.values(props.data)}\r\n        />\r\n        <Orbit\r\n      type={\"planet\"}\r\n        params={new Vector3().fromArray(Planet_info.center.map((el) => el * Scale))}\r\n        system={Planet_info}\r\n        />\r\n        {!Planet_info.isInSafeZone?<Pipe info={Planet_info} system={Object.values(props.data)} position={new Vector3().fromArray(Planet_info.center.map((el) => el * Scale))}/>:null}\r\n        \r\n        </TransformNode>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n}\r\n\r\nexport {Planets};\r\n","//import Helios from \"../data/helios.json\" assert { type: \"json\" };\n//const Helios = require(\"../data/helios.json\")\n\nasync function GetAllData(){\n   const fetcher = await fetch('./data/helios.json').then(response => {\n      return response.json();\n\n    }).catch((error)=>console.log(error))\n    return fetcher[0]\n}\n\n\n\n\nfunction GetPlanete(Helios) {\n  var size = 1300;\n  const Planete = [];\n  for (let index = 1; index < size; index++) {\n    if (Helios[index] !== undefined) {\n      if (!Helios[index].name[0].includes(\"Moon\")) {\n        const p = Helios[index];\n        Planete.push(p);\n      }\n    } else {\n      index++;\n    }\n  }\n\n  return Planete;\n}\n\n\nfunction GetMoon(Planete,Helios) {\n  if(Helios){\n  ///console.log(Planete,Helios)\n  const Sat = Planete.satellites;\n  return Sat\n    ? Sat.map((id) => {\n      //console.log(id)\n        const HeliosArray = Object.values(Helios);\n        const Moon = HeliosArray.filter((el) => {\n          return el.type[0].includes(\"Moon\") ? el : null;\n        });\n        return Moon.find((items) => items.id === id);\n      })\n    : null;\n  }\n}\n\n\n\nfunction FindBody(BodyId){\n  return GetAllData().then((helios)=>{\n    const HeliosArray = Object.values(helios)\n    return HeliosArray.find((body)=>body.id === parseInt(BodyId))\n  })\n}\nexport {GetAllData, GetPlanete, GetMoon,FindBody };\n","\r\nimport { FindBody } from './Data';\r\nimport React,{useState,useRef,useMemo, useContext, useCallback} from \"react\";\r\n\r\nimport { Vector3 } from \"@babylonjs/core\";\r\nimport { Color3} from \"@babylonjs/core/Maths/math.color\";\r\nimport { Ray,RayHelper,MeshBuilder,Mesh, StandardMaterial } from \"babylonjs\";\r\nimport { Line, useBeforeRender,useScene } from \"react-babylonjs\";\r\nimport{IDContext,dispatchWaypoint} from \"../context\"\r\nconst Scale = 0.00005\r\n\r\nfunction ScaleValue(vec3,Scale){\r\n\r\n    return new Vector3(vec3.x*Scale,vec3.y*Scale,vec3.z*Scale)\r\n}\r\nasync function getPoints(coordonner,Scale){\r\n\r\n    return  await parseCoordonner(coordonner).then((result)=>{\r\n        return ScaleValue(result.coordonne, Scale);\r\n    });\r\n\r\n}\r\nfunction formatCoordonne(unformattedCoord) {\r\n    let fields = unformattedCoord.replace(\"::pos{\",\"\").replace(\"}\",\"\").split(',');\r\n    if (fields.length < 5){\r\n        return {error: true};\r\n    }else{\r\n        return {\r\n            error: false,\r\n            systemID: parseInt(fields[0]),\r\n            planetID: parseInt(fields[1]),\r\n            lat: parseFloat(fields[2]),\r\n            long: parseFloat(fields[3]),\r\n            height: parseFloat(fields[4]),\r\n        };\r\n    }\r\n}\r\n\r\nasync function parseCoordonner(coordonner) {\r\n    \r\n    const deg2rad    = Math.PI/180\r\n    //const rad2deg    = 180/Math.PI\r\n    if(typeof coordonner === \"string\" && coordonner.includes(\"::pos\")){\r\n        let formatted = formatCoordonne(coordonner)\r\n            if(!formatted.error && formatted.planetID !== 0){\r\n                return FindBody(formatted.planetID).then((planete)=>{\r\n                    //console.log(planete)\r\n                    let radius = planete.radius;\r\n                    let Center = planete.center\r\n\r\n                    let height = formatted.height\r\n                    let lat = formatted.lat*deg2rad\r\n                    let long = formatted.long*deg2rad\r\n                    let totalDistance =  height + radius;\r\n\r\n                    let globalX = (Center[0] + totalDistance * Math.cos(lat)*Math.cos(long))\r\n                    let globalY = (Center[1] + totalDistance * Math.cos(lat)*Math.sin(long))\r\n                    let globalZ = (Center[2] + totalDistance * Math.sin(lat))\r\n                    return {\r\n                        error: \"false\",\r\n                        message:'Les coordonner ce trouve sur '+planete.name[0],\r\n                        coordonne: new Vector3(globalX,globalY,globalZ)\r\n                    } })}\r\n            else if(!formatted.error && formatted.planetID === 0){\r\n                return  new Promise((resolve, reject) => {\r\n                    resolve({\r\n                        error: \"false\",\r\n                        message:\"les coordonner sont dans l'espace\",\r\n                        coordonne: new Vector3(formatted.long,formatted.lat,formatted.height)\r\n                    })\r\n                });\r\n  \r\n\r\n\r\n            }\r\n            \r\n            else{\r\n                return new Promise((resolve, reject) => {\r\n                    resolve({\r\n                        error: \"true\",\r\n                        message:'les coordonner ne sont pas bien formater',\r\n                    })\r\n                });\r\n            }\r\n        \r\n        \r\n        \r\n        }\r\n    if (typeof coordonner === \"object\" && coordonner.length > 0){\r\n        \r\n        const promise = new Promise((resolve, reject) => {\r\n            resolve({\r\n                error: \"false\",\r\n                message:'Les coordonner peuvent ne pas correspondre',\r\n                coordonne: new Vector3(coordonner[0],coordonner[1],coordonner[2])\r\n            })\r\n          });\r\n        return promise\r\n    }\r\n    \r\n    else{\r\n        const promise = new Promise((resolve, reject) => {\r\n            resolve({\r\n                error: \"true\",\r\n                message:'les coordonner ne sont pas correcte',\r\n                coordonne: new Vector3(0,0,0)\r\n            })\r\n          });\r\n        return promise\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst MakePoint = ((props) => {\r\n    const Ref = useRef()\r\n    \r\n    \r\n  const created = (Ref)=>{\r\n    dispatchWaypoint(Ref)\r\n  }\r\n\r\n//position={props.position}\r\n\r\n  return (\r\n      <sphere ref={Ref} name={\"Point-\"+props.id} diameter={0.1} segments={7} position={props.position} onCreated={created}>\r\n      <standardMaterial name={\"Point-Mat\"} diffuseColor={Color3.Blue()} specularColor={Color3.Black()} />\r\n          </sphere>)\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport  default function InfoUser(props)\r\n{\r\n    \r\n/*    const worldVec = new BABYLON.Vector3(corArriver2.X,corArriver2.Y,corArriver2.Z)\r\nconst coords    = worldVec.subtract(Aliot)\r\nconst distance  = coords.length()\r\nconst altitude  = distance - AliotRadius */\r\nconst [Point,setPoint] = useState([])\r\nconst [count,setcount] = useState(0)\r\nconst Coordonner = [\r\n    \"::pos{0,2,30.8601,53.3687,-0.0000}\",\r\n    [238425.1186,311031.5552,-125195.9156],\r\n    \"::pos{0,0,1412187.3672,360396.1875,666238.9646}\",\r\n    \"::pos{0,3,-2.5162,-123.9570,13569.2939}\"\r\n]\r\n\r\nuseBeforeRender(async (scene)  => {\r\n    if(count === 0){\r\n        setcount(count+1)\r\n        setPoint(await Promise.all(Coordonner.map((el)=>getPoints(el,Scale))).then((Points)=>{return Points}))\r\n        \r\n    }\r\n    \r\n}) \r\n\r\n\r\nconst pointobj = Point.length>0&&Point.map((value,key)=><MakePoint position={value} key={key} id={key}/>)\r\n \r\nreturn Point.length> 0?\r\n <transformNode name={'Waypoint'}>\r\n     <lines name='Waypoint-Path' points={Point} color={new Color3(1, 1, 1)}>\r\n    </lines>\r\n    {pointobj}\r\n\r\n    \r\n    \r\n    </transformNode>:null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState,useRef,useCallback, useMemo, useEffect,useContext,useReducer } from 'react';\r\n\r\nimport {TransformNode,useBeforeRender,Sphere,useScene, Control, Control3D} from 'react-babylonjs'\r\n\r\nimport {Planets} from './Component/planete';\r\nimport { GetAllData} from './Data';\r\nimport InfoUser from './infoUsers';\r\nimport { Vector3 } from \"@babylonjs/core\";\r\nimport { Color3 } from \"@babylonjs/core/Maths/math.color\";\r\nimport { IDContext,dispatch } from '../context'\r\n\r\n//import { Rectangle,TextBlock,Button } from '@babylonjs/gui';\r\n\r\nconst Scale = 0.00005;\r\nconst centerSafeZone = new Vector3(13771471*Scale,7364470.4372*Scale,-128971*Scale)\r\nconst centerMap = new Vector3(0*Scale, 24000000*Scale, 0*Scale)\r\n\r\nfunction SafeZone(){\r\n  const safezonestate = useRef(null)\r\n  //\r\n  const Context = useContext(IDContext)\r\n  const [hide,sethide] = useState(Context.Safezone)\r\n\r\n  useBeforeRender(()=>{\r\n\r\n    sethide(Context.Safezone)\r\n  })\r\n\r\n\r\n  const Radius = 90 * 200000\r\n\r\n  return (<Sphere\r\n  ref={safezonestate}\r\n  name={\"SafeZone Trigger\"}\r\n  segments={12}\r\n  diameter={(Radius*2)*Scale}\r\n  position={centerSafeZone}\r\n  setEnabled={hide}\r\n  \r\n  isPickable={false}\r\n>\r\n  <standardMaterial\r\n    name={\"SafeZone Trigger mat\"}\r\n    alpha=\"0.5\"\r\n    diffuseColor={new Color3(0, 0, 1)}\r\n    specularColor={new Color3(0, 0, 0)}\r\n  />\r\n</Sphere>)\r\n}\r\n\r\nfunction Sun(){\r\n \r\n  \r\n  //position approximative\r\n  /* const safezonegeometry = new THREE.SphereGeometry( 36000000*Scale, 17, 17 );//position approximative\r\n  //geometry.position =new THREE.Vector3(centerMap.x,centerMap.y,centerMap.z)*/\r\n\r\n\r\nreturn <Sphere\r\nname={\"Sun\"}\r\nsegments={12}\r\ndiameter={1000000*Scale}\r\nposition={centerMap}\r\n\r\n>\r\n<standardMaterial\r\n  name={\"Sun mat\"}\r\n  alpha=\"0.5\"\r\n  diffuseColor={new Color3(0, 0, 1)}\r\n  specularColor={new Color3(0, 0, 0)}\r\n/>\r\n</Sphere>\r\n}\r\n\r\n\r\nfunction SetTarget(mesh,scene) {\r\n\r\n  //console.log('sphere clicked',ev.meshUnderPointer.parent.name,ev.meshUnderPointer.id);\r\n  //console.log(\"old : \",scene.cameras[0].target.name)\r\n  //ChangeID(ev.meshUnderPointer.id)\r\n  //state.ID = ev.meshUnderPointer.id\r\n  //dispatch(state)\r\n  dispatch(mesh)\r\n  console.log(mesh)\r\n  //Change(mesh._id)\r\n\r\n  \r\n  //document.getElementById('PlanetID').value  = ev.meshUnderPointer.id\r\n\r\n  scene.cameras[0].target.name!== undefined&&scene.meshes.forEach(element => {\r\n    if(element.name === scene.cameras[0].target.name){\r\n        //old Target\r\n        element.isPickable = true\r\n    }\r\n})\r\nscene.cameras[0].target = mesh\r\nscene.cameras[0].target.name = mesh.name\r\n//console.log(\"Triger\",scene.cameras[0].target,ev.meshUnderPointer)\r\nmesh.isPickable = false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst RectGui = React.forwardRef((props, ref)=>{\r\n  const [name,target,Type] = props.data\r\n  const refel= useRef()\r\nreturn name !== undefined&&(\r\n  <rectangle\r\n    ref={ref}\r\n    name={name}\r\n    background=\"transparent\"\r\n    cornerRadius={0}\r\n    thickness={0}\r\n    linkOffsetX={Type!== 'point'?100:0}\r\n    widthInPixels={name.length * 10} heightInPixels={14}\r\n    verticalAlignment={Control.VERTICAL_ALIGNMENT_TOP}\r\n    top=\"0\"\r\n  >\r\n    <babylon-button ref={refel}\r\n    name={name+\"-button\"} \r\n    widthInPixels={name.length * 10} heightInPixels={14}\r\n    thickness={0} \r\n    onPointerDownObservable={()=>{\r\n      SetTarget(Type===\"Moon\"?refel.current.parent._linkedMesh:refel.current.parent._linkedMesh,target.scene)}} >\r\n    <textBlock  \r\n    name={name+\"-text\"} \r\n    text={name} \r\n    color=\"White\" \r\n    fontSizeInPixels={Type!== 'point'?16:12} \r\n    onBeforeDrawObservable={(ref)=>{\r\n      let distance = ref.parent.parent._linkedMesh?((target.scene.activeCamera.position.clone()).subtract(ref.parent.parent._linkedMesh._absolutePosition.clone())).length().toFixed(2):console.log(ref.parent.parent.name)\r\n      if(distance <= 400){\r\n        ref.parent.parent.widthInPixels = name.length * 10\r\n        ref.linkOffsetX = Type!== 'point'?100:0\r\n        ref.text = name;\r\n    \r\n      }else if (distance > 400 && Type === \"Moon\"){\r\n        ref.linkOffsetX = 0\r\n        ref.parent.parent.widthInPixels = 0\r\n        ref.text = ''\r\n      }\r\n      else{\r\n        ref.parent.parent.widthInPixels = name.length * 10\r\n        ref.linkOffsetX = 0\r\n        ref.text = name ;\r\n      }\r\n    \r\n    \r\n    \r\n    \r\n      }}\r\n    />\r\n    </babylon-button>\r\n    \r\n  </rectangle>\r\n);\r\n})\r\n/*  */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Helios(){\r\n  const context = useContext(IDContext)\r\n  const [Waypoint,setWaypoint] = useState(null)\r\n  const [data,setdata]=useState(null)\r\n  const scene = useScene()\r\n  const refList = []\r\n  const refWaypointList = []\r\n\r\n\r\n   useEffect(() => {\r\n    scene.debugLayer.show();\r\n    const p = GetAllData().then((HeliosSystem)=>{setdata({\r\n      react:(<><Planets data={HeliosSystem}/><SafeZone/></>),\r\n      raw:HeliosSystem\r\n    })})\r\n    \r\n  },[]);\r\n  \r\n\r\n  const onFullScreenRef = useCallback(ref => {\r\n    //\r\n          try {\r\n            refList.length > 0&&console.log(refList)\r\n            refList.length > 0&&refList.forEach((el)=>{el!==null&&el.name!==undefined&&el.linkWithMesh(scene.getMeshByName(el.name+\":Trigger\"))})\r\n            \r\n          } catch (e) {\r\n            console.error(e)\r\n          }})\r\n\r\nconst onFullScreenWaypointRef = useCallback(ref => {\r\n  let timers = 1000\r\n  const temps = setInterval(()=>{\r\n    if(context.Path.length>0){\r\n      setWaypoint(context.Path)\r\n      console.log(context.Path.length)\r\n      try {\r\n        refWaypointList.length > 0&&console.log(refWaypointList)\r\n        refWaypointList.length > 0&&refWaypointList.forEach((el)=>{el!==null&&el.name!==undefined&&el.linkWithMesh(scene.getMeshByName(el.name))})\r\n        \r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n      \r\n      \r\n      \r\n      clearInterval(temps)\r\n    }\r\n\r\n  \r\n  },timers)\r\n  \r\n})\r\n\r\n\r\n\r\n  if(data){\r\n    return<>\r\n    <transformNode name=\"Helios\" >\r\n              {data&&(data.react)}\r\n              \r\n    </transformNode>\r\n    <InfoUser/>\r\n    <adtFullscreenUi ref={onFullScreenRef} name=\"heliosGUI\" idealHeight = {window.innerHeight} idealWidth = {window.innerWidth}>\r\n    {  Object.values(data.raw).map((el)=>\r\n      <RectGui key={el.id} ref={(ref)=>{refList.push(ref)}} data={[el.name[0],{scene:scene,context:context},el.type[0]]}/>)\r\n      }\r\n      \r\n    </adtFullscreenUi>\r\n    <adtFullscreenUi ref={onFullScreenWaypointRef} name=\"WaypointManager\" idealHeight = {window.innerHeight} idealWidth = {window.innerWidth}>\r\n    {Waypoint&&Waypoint.length> 0&&Waypoint.map((value,key)=>value !== null &&(<RectGui key={key} ref={(ref)=>{refWaypointList.push(ref)}} data={[value.name,{scene:scene,context:context},\"point\"]}/>)) }\r\n    </adtFullscreenUi>\r\n    </>\r\n\r\n\r\n\r\n  }\r\n  else {return null}\r\n\r\n    \r\n  }\r\n//   <RectGui key={key} ref={(ref)=>{refWaypointList.push(ref)}} data={[value.name,{scene:scene,context:context},null]}/> \r\n//","import React ,{useRef,useState,useCallback}from 'react';\r\n\r\nimport Helios from './Helios';\r\nimport { Scene,Skybox} from 'react-babylonjs'\r\nimport { Vector3,Color3, Texture  } from '@babylonjs/core';\r\n\r\n\r\n\r\nexport default function Viewer(){\r\n  var cubeTextureNode = null;\r\n  var cubeTextureClone = null;\r\n  var route = '../build/assets/textures/' \r\n  const [texturesLoaded, setTexturesLoaded] = useState(false);\r\n  const cubeTextureRef = useCallback(node => {\r\n    if (node && texturesLoaded === false) {\r\n      setTexturesLoaded(true); // trigger render and props assignment\r\n      cubeTextureNode = node;\r\n\r\n      cubeTextureClone = cubeTextureNode.clone();\r\n      cubeTextureClone.name = 'cloned texture'\r\n      cubeTextureClone.coordinatesMode = Texture.SKYBOX_MODE;\r\n    }\r\n  }, []);\r\n  //          <cubeTexture ref={cubeTextureRef} name=\"cubeTexture\" rootUrl={SkyboxTexture} createPolynomials={true} format={undefined} prefiltered={true}/>\r\n\r\n   return (\r\n           <Scene name=\"Helios\" ambientColor={new  Color3(1, 1, 1)} clearColor={new Color3.Black()}>\r\n                <arcRotateCamera\r\n          name=\"camera1\"\r\n          target={Vector3.Zero()}\r\n          alpha={Math.PI / 3}\r\n          beta={Math.PI / 4}\r\n          radius={8}\r\n          minZ={1} maxZ={100000} lowerRadiusLimit={10} wheelPrecision={0.5}\r\n        />\r\n            \r\n            <hemisphericLight name=\"light1\" intensity={0.7} direction={Vector3.Up()} />\r\n            \r\n            <Skybox size={100000} rootUrl={route}></Skybox>\r\n\r\n      <Helios/>\r\n          </Scene>\r\n        )\r\n    }","import React, { Component, useState } from \"react\";\r\n\r\n//{propriétés:\"value\"}\r\n\r\nexport default class ReactDatGui extends Component {\r\n  static String(props) {\r\n    const lang = props.src.lang\r\n    const obj = Object.values(props.src)[0]\r\n    const property = Object.keys(props.src)[0]\r\n    const value = obj[property.toLowerCase()]\r\n    //console.log(props,value[lang])\r\n\r\n   \r\n    return (\r\n      <li className={\"\"}>\r\n        <span className=\"property-name\">{property}</span>\r\n        <span className=\"c\">{obj.hasOwnProperty(property.toLowerCase())?value[lang]:null}</span>\r\n      </li>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  static Boolean(props) {\r\n    \r\n    const lang = props.src.lang\r\n    const obj = Object.values(props.src)[0]\r\n    const property = Object.keys(props.src)[0]\r\n    const value = obj[Object.keys(obj).find((el)=>el.match(property.replace(/ /g, \"\")))]\r\n    //console.log(props)\r\n    return (\r\n      <li className={\"cr boolean\"}>\r\n        <div>\r\n          <span className=\"property-name\">{property}</span>\r\n          <div className=\"c\">\r\n            <span className=\"c\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={value ? true : false}\r\n                onChange={()=>{return false}}\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  static Folder(props) {\r\n    const [hide, sethide] = useState(props.close);\r\n    \r\n    return (\r\n      <li className=\"folder \">\r\n        <div\r\n          className=\" title\"\r\n          onClick={(e) => {\r\n            e.target.innerText === props.title && sethide(!hide);props.onChange !== undefined&&props.onChange(hide);\r\n          }}\r\n        >\r\n          <ul className={hide ? \"closed\" : null}>\r\n            <li className=\"title\">{props.title}</li>\r\n            {props.children}\r\n          </ul>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n","import React, { useEffect, useState, useContext,useCallback } from \"react\";\r\nimport * as dat from \"dat.gui\";\r\nimport \"./dat.css\";\r\nimport { GetAllData } from \"../Viewer/Data\";\r\n\r\nimport { IDContext } from \"../context\";\r\nimport ReactDatGui from \"./ReactDatComponent/component\";\r\n\r\nconst lang = 1;\r\n\r\nfunction DatGUI(props) {\r\n  const [hide, sethide] = useState({ main: null });\r\n  const [data, setdata] = useState(null);\r\n  const [image, setimage] = useState(null);\r\n  const display = useContext(IDContext);\r\n  const [IDWaypoint,setWaypoint] = useState(null)\r\n  const [ID,setID] = useState(1)\r\n\r\n  \r\n  useEffect(() => {\r\n\r\n    GetAllData().then((HeliosSystem) => {\r\n      setdata(Object.values(HeliosSystem));\r\n      \r\n      \r\n    });\r\n    img().then((img) => {\r\n      setimage(img);\r\n    });\r\n    \r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n  function close(element) {\r\n    hide[element] !== \"closed\"\r\n      ? sethide({\r\n          ...hide,\r\n          [element]: \"closed\",\r\n        })\r\n      : sethide({\r\n          ...hide,\r\n          [element]: null,\r\n        });\r\n  }\r\n\r\n  function OreToType(Ore) {\r\n    const T1 = [\r\n      [\"Bauxite\", \"Bauxite\", \"Bauxit\"],\r\n      [\"Coal\", \"Charbon\", \"Kohle\"],\r\n      [\"Quartz\", \"Quartz\", \"Quarz\"],\r\n      [\"Hematite\", \"Hématite\", \"Hämatit\"],\r\n    ];\r\n    const T2 = [\r\n      [\"Natron\", \"Natron\", \"Soda\"],\r\n      [\"Chromite\", \"Chromite\", \"Chromit\"],\r\n      [\"Limestone\", \"Calcaire\", \"Kalkstein\"],\r\n      [\"Malachite\", \"Malachite\", \"Malachit\"],\r\n    ];\r\n    const T3 = [\r\n      [\"Garnierite\", \"Garniérite\", \"Garnierit\"],\r\n      [\"Acanthite\", \"Acanthite\", \"Akanthit\"],\r\n      [\"Petalite\", \"Pétalite\", \"Petalit\"],\r\n      [\"Pyrite\", \"Pyrite\", \"Pyrit\"],\r\n    ];\r\n\r\n    const T4 = [\r\n      [\"Cryolite\", \"Cryolite\", \"Kryolith\"],\r\n      [\"Cobaltite\", \"Cobaltite\", \"Cobaltit\"],\r\n      [\"Kolbeckite\", \"Kolbeckite\", \"Kolbeckit\"],\r\n      [\"Gold nuggets\", \"Pépites d'or\", \"Goldnuggets\"],\r\n    ];\r\n\r\n    const T5 = [\r\n      [\"Columbite\", \"Columbite\", \"Columbit\"],\r\n      [\"Vanadinite\", \"Vanadinite\", \"Vanadinit\"],\r\n      [\"Ilmenite\", \"Ilménite\", \"Ilmenit\"],\r\n      [\"Rhodonite\", \"Rhodonite\", \"Rhodonit\"],\r\n    ];\r\n\r\n    return T1.find((el) => el[0] === Ore[0])\r\n      ? \"Tier 1\"\r\n      : T2.find((el) => el[0] === Ore[0])\r\n      ? \"Tier 2\"\r\n      : T3.find((el) => el[0] === Ore[0])\r\n      ? \"Tier 3\"\r\n      : T4.find((el) => el[0] === Ore[0])\r\n      ? \"Tier 4\"\r\n      : T5.find((el) => el[0] === Ore[0])\r\n      ? \"Tier 5\"\r\n      : null;\r\n  }\r\n\r\n  function OreToTypeClassName(string) {\r\n    return \"T\" + string[string.length - 1];\r\n  }\r\n  function compare(a, b) {\r\n    if (\r\n      a.props.children[0].props.children < b.props.children[0].props.children\r\n    ) {\r\n      return -1;\r\n    }\r\n    if (\r\n      a.props.children[0].props.children > b.props.children[0].props.children\r\n    ) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  //objs.sort( compare );\r\n\r\n  async function img() {\r\n    const img = await fetch(\"./data/image.json\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    return img;\r\n  }\r\n\r\n  function GetImage(name) {\r\n    return name.includes(\"Moon\")\r\n      ? image && image[\"generic moon\"]\r\n      : image && image[name];\r\n  }\r\n  //data!== null&&console.log(data)\r\n\r\n  const [descriptionhide, setdescriptionhide] = useState(true);\r\n  const [Orehide, setOrehide] = useState(true);\r\n\r\n\r\n  \r\n//\r\n  const Loaded = ()=>{\r\n    data&&setInterval(()=>{\r\n      display.id!== \"Waypoint\"?\r\n    setID(getKeyByValue(data,data.find((el)=>el.name[0] === display.id))):\r\n    setWaypoint(display.Waypoint)\r\n  }, 1000)\r\n\r\n  }\r\n\r\n\r\n  const handlechange = (el) => {\r\n    display.changeInfo(el.target.id, el.target.checked);\r\n    //setdisplay({...display,Safezone:!display.Safezone})\r\n  };\r\n\r\n  function getKeyByValue(object, value) {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n  }\r\n\r\n  return (\r\n    data !== null && (\r\n      <div\r\n        className=\"dg ac\"\r\n        onLoad={Loaded}\r\n      >\r\n        <div\r\n          className=\"dg main a\"\r\n          id=\"gui\"\r\n          style={{ width: \"245px\", marginTop: \"20px\" }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"245px\",\r\n              marginLeft: \"-3px\",\r\n              cursor: \"ew-resize\",\r\n              position: \"absolute\",\r\n              maxHeight: \"90vh\",\r\n            }}\r\n          >\r\n            {/* <input id=\"PlanetID\" type=\"text\" value={IDs}/> */}\r\n            <ul className={hide.main}>\r\n              <ReactDatGui.Folder\r\n                title={\"Description\"}\r\n                close\r\n                onChange={(e) => {\r\n                  setdescriptionhide(!descriptionhide);\r\n                }}\r\n              >\r\n                <li\r\n                  className=\"cr string\"\r\n                  style={{ height: descriptionhide ? 0 : \"auto\" }}\r\n                >\r\n                  <h3>{data[ID].name[lang]}</h3>\r\n                  <img\r\n                    style={{ width: \"100%\", height: \"auto\" }}\r\n                    alt=\"Planet\"\r\n                    src={\"https://\" + GetImage(data[ID].name[0])}\r\n                  />\r\n                  <span\r\n                    style={{ display: \"flex\", height: \"100%\", width: \"100%\" }}\r\n                  >\r\n                    {data[ID].description ? data[ID].description[lang] : \"\"}\r\n                  </span>\r\n                </li>\r\n              </ReactDatGui.Folder>\r\n              <ReactDatGui.Folder title=\"Info\" close>\r\n                <ReactDatGui.String src={{ Type: data[ID], lang: lang }} />\r\n                <ReactDatGui.String\r\n                  src={{ Classification: data[ID], lang: lang }}\r\n                />\r\n\r\n                <ReactDatGui.String src={{ Biosphere: data[ID], lang: lang }} />\r\n                <ReactDatGui.String\r\n                  src={{ Habitability: data[ID], lang: lang }}\r\n                />\r\n\r\n                <ReactDatGui.Boolean src={{ Atmosphere: data[ID] }} />\r\n                <ReactDatGui.Boolean src={{ \"In Safe Zone\": data[ID] }} />\r\n              </ReactDatGui.Folder>\r\n\r\n              <ReactDatGui.Folder\r\n                title=\"Ores\"\r\n                close\r\n                onChange={(e) => {\r\n                  setOrehide(!Orehide);\r\n                }}\r\n              >\r\n                <li className=\"cr\" style={{ height: Orehide ? 0 : \"auto\" }}>\r\n                  {data[ID].ores\r\n                    .map((el) => (\r\n                      <div key={el[0]} className=\"cr\">\r\n                        <span\r\n                          className={\r\n                            \"property-name Ores \" +\r\n                            OreToTypeClassName(OreToType(el))\r\n                          }\r\n                        >\r\n                          {OreToType(el)}\r\n                        </span>\r\n                        <span className=\" c\">{el[lang]}</span>\r\n                      </div>\r\n                    ))\r\n                    .sort(compare)}\r\n                </li>\r\n              </ReactDatGui.Folder>\r\n              <ReactDatGui.Folder title=\"System\" close>\r\n                <li className=\"cr boolean\">\r\n                  <div>\r\n                    <span className=\"property-name\">Toggle SafeZone</span>\r\n                    <div className=\"c\">\r\n                      <input\r\n                        id=\"Safezone\"\r\n                        type=\"checkbox\"\r\n                        defaultChecked={display.Safezone}\r\n                        onChange={handlechange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <li className=\"cr boolean\">\r\n                  <div>\r\n                    <span className=\"property-name\">Toggle Pipe</span>\r\n                    <div className=\"c\">\r\n                      <input\r\n                        id=\"pipe\"\r\n                        type=\"checkbox\"\r\n                        defaultChecked={display.pipe}\r\n                        onChange={handlechange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <li className=\"cr boolean\">\r\n                  <div>\r\n                    <span className=\"property-name\">Toggle Orbit</span>\r\n                    <div className=\"c\">\r\n                      <input\r\n                        id=\"orbit\"\r\n                        type=\"checkbox\"\r\n                        defaultChecked={display.orbit}\r\n                        onChange={handlechange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </ReactDatGui.Folder>\r\n            </ul>\r\n            <div\r\n              className=\"close-button close-bottom\"\r\n              style={{ width: \"245px\"}}\r\n              onClick={() => {\r\n                close(\"main\");\r\n              }}\r\n            >\r\n              {hide.main === null ? \"Close\" : \"Info Planet : \"+data[ID].name[0]}\r\n            </div>\r\n            <div style={{ width: \"245px\",height:\"20px\" }}>0</div>\r\n            <div\r\n              className=\"close-button close-bottom\"\r\n              style={{ width: \"245px\" }}\r\n              onClick={(e) => {\r\n                console.log(\"Waypoint Manager\")\r\n              }}\r\n            >\r\n              Waypoint Manager {IDWaypoint}\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport { DatGUI };\r\n","import React, { Component, useContext } from 'react';\r\nimport { Engine } from 'react-babylonjs'\r\nimport Viewer from './Viewer/'; \r\nimport {DatGUI} from './components/ReactDatGui'\r\nimport { IDContext } from './context'\r\nimport \"./app.css\"\r\n\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n       \r\n      <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"sample-canvas\" debug={true}>\r\n        \r\n        <Viewer />\r\n      \r\n      </Engine>\r\n      <DatGUI/>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  \r\n}\r\nApp.contextType = IDContext;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
