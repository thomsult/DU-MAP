{"version":3,"sources":["Viewer/Component/orbit.js","context.js","Viewer/Component/planete.js","Viewer/Data.js","Viewer/infoUsers.js","Viewer/Helios.js","Viewer/index.jsx","components/ReactDatComponent/component.js","components/ReactDatGui.js","App.js","serviceWorker.js","index.js"],"names":["Scale","Orbit","props","_useState","useState","_useState2","Object","slicedToArray","Hide","setHide","Planet_info","params","parent","Vector3","Type","type","useBeforeRender","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","document","getElementById","checked","stop","Moon","undefined","copyFrom","Planet","divArray","radius","Distance","i","push","Math","PI","newPath","y","length","cos","sin","react_default","createElement","alpha","setEnabled","isPickable","name","points","color","Color3","onCreated","lines","lookAt","Pipe","Aliot","fromArray","system","center","map","el","po","subtract","position","scene","useScene","_useState3","_useState4","_callee2","_context2","transform","useRef","Tube","Promise","resolve","current","_children","find","includes","Path","localMeshDirection","localMeshOrigin","ray","Ray","pickWithRay","mesh","pickedPoint","MeshBuilder","CreateTube","info","path","sideOrientation","Mesh","DOUBLESIDE","mat","StandardMaterial","diffuseColor","specularColor","material","state","val","_useState5","_useState6","loaded","setLoaded","Display","then","ref","debug","IDContext","React","createContext","id","change","value","_currentValue","SetTarget","context","Change","cameras","target","meshes","forEach","element","Satellites","satellites","moon","planete_Moon","key","positionParent","react_babylonjs","segments","diameter","bodytype","infoData","systemId","PlanetTrigger","add","Fragment","PlanetRef","useContext","sphere","actionManager","ActionManager","getScene","enable","x","advancedTexture","AdvancedDynamicTexture","CreateFullscreenUI","concat","useInvalidateRectOptimization","distance","activeCamera","clone","toFixed","rect1","Rectangle","width","height","thickness","addControl","button","Button","CreateSimpleButton","textBlock","text","top","left","cornerRadius","children","fontSize","hoverCursor","linkWithMesh","linkOffsetY","onBeforeDrawObservable","onPointerClickObservable","e","console","log","Gui3D","registerAction","ExecuteCodeAction","OnPickTrigger","ev","meshUnderPointer","father","Planets","values","data","planete_Planet","isInSafeZone","GetAllData","fetcher","fetch","response","json","catch","error","sent","abrupt","FindBody","BodyId","helios","body","parseInt","ScaleValue","vec3","z","getPoints","coordonner","parseCoordonner","result","coordonne","formatCoordonne","unformattedCoord","fields","replace","split","systemID","planetID","lat","parseFloat","long","_callee3","deg2rad","formatted","promise","_promise","_promise2","_promise3","_context3","planete","Center","totalDistance","globalX","globalY","globalZ","message","reject","SafeZone","safezonestate","centerSafeZone","Radius","computeWorldMatrix","Helios","setdata","beforeMount","Scene","engine","getEngine","debugLayer","show","_gl","getRenderHeight","getRenderingCanvas","getRenderWidth","count","setcount","Coordonner","_ref","all","Points","CreateLines","_x4","apply","this","arguments","InfoUser","HeliosSystem","Viewer","ambientColor","clearColor","Black","Zero","beta","minZ","maxZ","lowerRadiusLimit","wheelPrecision","intensity","direction","Up","ReactDatGui","lang","src","obj","property","keys","toLowerCase","className","hasOwnProperty","match","onChange","close","hide","sethide","onClick","innerText","title","Component","DatGUI","main","image","setimage","_useState7","_useState8","ID","SetID","getKeyByValue","object","IDs","OreToType","Ore","_img","img","useEffect","_useState9","_useState10","descriptionhide","setdescriptionhide","_useState11","_useState12","Orehide","setOrehide","_useState13","Safezone","pipe","orbit","_useState14","display","setdisplay","onLoad","setInterval","style","marginTop","marginLeft","cursor","overflowX","maxHeight","paddingBottom","component_ReactDatGui","Folder","alt","description","String","Classification","Biosphere","Habitability","Boolean","Atmosphere","In Safe Zone","ores","string","sort","b","objectSpread","defineProperty","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateWindowDimensions","bind","assertThisInitialized","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","antialias","adaptToDeviceRatio","canvasId","contextType","location","hostname","ReactDOM","render","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bfa89a7b.chunk.js","sourcesContent":["import React,{useRef,useState} from \"react\";\r\n\r\nimport { Vector3 } from \"@babylonjs/core\";\r\nimport { Color3} from \"@babylonjs/core/Maths/math.color\";\r\nimport { Ray,RayHelper,MeshBuilder,Mesh, StandardMaterial, } from \"babylonjs\";\r\nimport { Scene, Tube, useBeforeRender, useScene } from \"react-babylonjs\";\r\n\r\nconst Scale = 0.00005;\r\n\r\n\r\n function Orbit(props){\r\n    const [Hide, setHide] = useState()\r\n    const Planet_info = props.params\r\n    const parent = new Vector3(0,0,0)\r\n    const Type = props.type\r\n    useBeforeRender(async() => {\r\n        //\r\n        setHide(document.getElementById(\"Orbit\").checked)\r\n        \r\n      });\r\n        const Moon = Type === undefined? new Vector3().copyFrom(parent):new Vector3().copyFrom(Planet_info)\r\n        const Planet = Type === undefined? new Vector3().copyFrom(Planet_info):new Vector3().copyFrom(parent)\r\n        \r\n        const distance =  Vector3.Distance(Planet,Moon)\r\n        const detail = 65;\r\n        const pieDiv = 2/detail;\r\n        const divArray = [];\r\n        const radius = distance\r\n            for(let i = 0; i < detail; i++){\r\n                divArray.push(Math.PI*(pieDiv*i));\r\n            }\r\n            const newPath= [];\r\n            for(let y = 0; y < divArray.length; y++){\r\n                newPath.push(new Vector3((radius * Math.cos(divArray[y])), (0), (radius * Math.sin(divArray[y]))));\r\n                }\r\n                newPath.push(newPath[0]);\r\n          return (\r\n            <lines\r\n            alpha={0.2}\r\n            setEnabled={Hide}\r\n            isPickable={false}\r\n            name={\"orbit\"}\r\n            points={newPath}\r\n            color={Type === undefined?new Color3(0,1,0):new Color3(1,0,0)}\r\n            onCreated={(lines)=>{lines.lookAt(Type === undefined?Planet:Moon)}}\r\n          />\r\n          )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nfunction Pipe(props){\r\n    const Aliot = new Vector3().fromArray(props.system[1].center.map((el) => el * Scale))//TargetDestination\r\n    const centerSafeZone = new Vector3(13771471*Scale,7364470.4372*Scale,-128971*Scale)\r\n    const po = Aliot.subtract(props.position) //destination\r\n    const pos = new Vector3(0,0,0) //origin\r\n    const scene = useScene()\r\nconst [Hide, setHide] = useState()\r\n\r\n\r\nuseBeforeRender(async() => {\r\n    //\r\n    setHide(document.getElementById(\"pipe\").checked)\r\n    \r\n  });\r\n\r\n\r\nconst transform = useRef(null)\r\nconst  Tube =()=>{\r\n    return new Promise(resolve => {\r\n    if(transform.current !== null && scene){\r\n        const triggerPl = transform.current.parent._children[0]._children.find((el)=>el.name.includes(\"Trigger\"))\r\n       \r\n\r\n    let Path = []\r\n    var localMeshDirection = po;\r\n    var localMeshOrigin = new Vector3().copyFrom(props.position);\r\n    var length = 1000000000000;\r\n    var ray = new Ray(localMeshOrigin,localMeshDirection,length);\r\n    function predicate(mesh) {\r\n        if (mesh.name === \"SafeZone Trigger\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    \r\n    \r\n    var hit = scene.pickWithRay(ray,predicate);\r\n    Path = [localMeshOrigin,\r\n        hit.pickedPoint\r\n    ]\r\n    \r\n    \r\n    //console.log(\"read\",Path,transform,scene)\r\n    const radius = (5 * 200000)*Scale\r\nif (Path.length > 0 && transform.current !== null){\r\n        const mesh = new MeshBuilder.CreateTube(props.info.name[0]+\" pipe\",{path:Path,radius:radius,sideOrientation: Mesh.DOUBLESIDE},scene)\r\n    const mat = new StandardMaterial(props.info.name[0]+\"pipe mat\",scene)\r\n    mat.diffuseColor = new Color3(1, 1, 0)\r\n    mat.specularColor = new Color3(0, 0, 0)\r\n    mat.alpha = 0.14\r\n    mesh.material = mat\r\n    mesh.parent = transform.current\r\n    resolve({state:true,val:\"ok\"})\r\n\r\n    } \r\n}})}\r\nconst [loaded,setLoaded] = useState(false);\r\nfunction Display(props){\r\n    \r\n    !loaded&&Tube().then((state)=>{setLoaded(state.state)})\r\n    return null\r\n}\r\n\r\n\r\n//setLoaded(true)\r\n//useBeforeRender(()=>drawray(scene))\r\n//name={props.info.name[0]+\" pipe\"} path={Path} radius={radius} sideOrientation={Mesh.DOUBLESIDE}\r\n//{path.length > 1&&<tube path={path} onCreated={(tube)=>{console.log(tube)}} radius={radius} name={props.info.name[0]+\" pipe\"} position={props.position} >\r\n//console.log(props.info)\r\n\r\nreturn <transformNode setEnabled={Hide} ref={transform} name={props.info.name[0]+\" pipe\"}><Display debug={true}/></transformNode>\r\n}\r\n\r\nexport {Orbit,Pipe}","import React from \"react\";\r\n \r\n  export const IDContext = React.createContext({\r\n    id: 2,\r\n    change: (state,value) => {\r\n      IDContext._currentValue.id = state\r\n      //console.log(state,IDContext)\r\n    \r\n    },\r\n  });\r\n","import React,{useRef, useState} from \"react\";\r\nimport {Orbit,Pipe} from './orbit';\r\nimport {\r\n  \r\n  Camera,\r\n  Sphere,\r\n  TransformNode,\r\n  useBeforeRender,\r\n  useScene,\r\n  \r\n} from \"react-babylonjs\";\r\nimport { Vector3,ActionManager,ExecuteCodeAction } from \"@babylonjs/core\";\r\nimport { Color3 } from \"@babylonjs/core/Maths/math.color\";\r\nimport {AdvancedDynamicTexture} from '@babylonjs/gui/2D'\r\nimport {Rectangle,TextBlock,Line,Ellipse,Button} from '@babylonjs/gui/2D/controls'\r\n\r\nimport { IDContext,reducer } from '../../context'\r\n\r\n\r\n\r\n\r\nconst Scale = 0.00005;\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Gui3D(props,scene,params,context){\r\n  let enable = false\r\n  const name = params.name[0]\r\n  const type = params.type[0]\r\n  const center = new Vector3().fromArray(params.center.map((x)=>x*Scale))\r\n  //console.log(center)\r\n  if(!enable){\r\n    var advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(`GUI ${name}`)\r\n   \r\n   \r\n   \r\n    //props&&console.log(scene.getMeshByName(name))\r\n  advancedTexture.useInvalidateRectOptimization = false\r\n  \r\n  \r\n  var distance = ((scene.activeCamera.position.clone()).subtract(center.clone())).length().toFixed(2)\r\n  var rect1 = new Rectangle();\r\n    rect1.width = 0.5;\r\n    rect1.height = \"40px\";\r\n    rect1.color = \"white\";\r\n    rect1.thickness = 0\r\n    advancedTexture.addControl(rect1);\r\n    rect1.distance = distance\r\n\r\n    /* rect1.onPointerClickObservable.add(()=>{\r\n\r\n      console.log(name)\r\n    }) */\r\n    var button = Button.CreateSimpleButton(\"button\");\r\n    button.textBlock.text = name+\" \"+rect1.distance\r\n    button.top = \"0px\";\r\n    button.left = \"0px\";\r\n    button.width = 0.5;\r\n    button.height = \"40px\";\r\n    button.thickness = 0;\r\n    button.cornerRadius = 2\r\n    button.children[0].color = \"#DFF9FB\";\r\n    button.children[0].fontSize = 18;\r\n    button.color = \"#FF7979\";\r\n    button.hoverCursor = \"pointer\";\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    rect1.addControl(button)\r\n\r\n\r\n    rect1.linkWithMesh(props);   \r\n    rect1.linkOffsetY = -50;\r\n    rect1.onBeforeDrawObservable.add(()=>{\r\n      rect1.distance = ((scene.activeCamera.position.clone()).subtract(center.clone())).length().toFixed(2);//(Vector3.Distance(center,scene.cameras[0].position)).toFixed(2)\r\n\r\n      if(type !== \"Moon\"){\r\n        button.textBlock.text = name\r\n      }else if(type === \"Moon\" && rect1.distance>400){\r\n        button.textBlock.text = \"\"\r\n        rect1.linkOffsetY = 0\r\n      }\r\n      else if(type === \"Moon\" && rect1.distance<400){\r\n        button.textBlock.text = name \r\n        rect1.linkOffsetY = 50\r\n      }\r\n    })\r\n    button.onPointerClickObservable.add(function (e) {\r\n      if(button.textBlock.text !== \"\"){\r\n        SetTarget(props,scene,context)\r\n        console.log(button.textBlock.text,rect1.distance)\r\n      }\r\n  });\r\n  \r\n  enable = true\r\n\r\n\r\n  }\r\n\r\nreturn null\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction SetTarget(mesh,scene,context) {\r\n  const Change = context.change\r\n  //console.log('sphere clicked',ev.meshUnderPointer.parent.name,ev.meshUnderPointer.id);\r\n  //console.log(\"old : \",scene.cameras[0].target.name)\r\n  //ChangeID(ev.meshUnderPointer.id)\r\n  //state.ID = ev.meshUnderPointer.id\r\n  //dispatch(state)\r\n  Change(mesh.id)\r\n\r\n  \r\n  //document.getElementById('PlanetID').value  = ev.meshUnderPointer.id\r\n\r\n  scene.cameras[0].target.name!== undefined&&scene.meshes.forEach(element => {\r\n    if(element.name === scene.cameras[0].target.name){\r\n        //old Target\r\n        element.isPickable = true\r\n    }\r\n})\r\nscene.cameras[0].target = mesh\r\nscene.cameras[0].target.name = mesh.name\r\n//console.log(\"Triger\",scene.cameras[0].target,ev.meshUnderPointer)\r\nmesh.isPickable = false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Planet(props) {\r\n  const params = props.params;\r\n\r\n\r\n  const Satellites = () => {\r\n    if (\r\n      params &&\r\n      params.satellites !== undefined &&\r\n      params.satellites.length > 0\r\n    ) {\r\n      return params.satellites.map((moon) => (\r\n        <Moon\r\n          key={moon}\r\n          system={props.system}\r\n          id={moon}\r\n          parent={params}\r\n          positionParent={new Vector3().fromArray(\r\n            params.center.map((el) => el * Scale)\r\n          )}\r\n        />\r\n      ));\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  return (\r\n    <Sphere\r\n      name={params.name[0]}\r\n      segments={12}\r\n      diameter={params.radius * 2 * Scale}\r\n      position={new Vector3().fromArray(params.center.map((el) => el * Scale))}\r\n      bodytype={params.type[0]}\r\n      infoData={params}\r\n      systemId={params.systemId}\r\n      id={params.id}\r\n      satellites={params.satellites}\r\n      isPickable={false}\r\n    >\r\n      <standardMaterial\r\n        name={params.name[0]+\"mat\"}\r\n        diffuseColor={new Color3(0, 1, 0)}\r\n        specularColor={new Color3(0, 0, 0)}\r\n      />\r\n      <Satellites />\r\n      <PlanetTrigger parent={params}  />\r\n      \r\n    </Sphere>\r\n  );\r\n}\r\n\r\nfunction Moon(props) {\r\n\r\n  const params = props.system.find((moon) => moon.id === props.id);\r\n  const positionParent = props.positionParent;\r\n  const center = new Vector3().fromArray(params.center.map((el) => el * Scale));\r\n  const position = new Vector3(0, 0, 0).add(center.subtract(positionParent));\r\n\r\n  return (\r\n    <><Sphere\r\n    \r\n      name={params.name[0]}\r\n      segments={12}\r\n      diameter={params.radius * 2 * Scale}\r\n      position={position}\r\n      bodytype={params.type[0]}\r\n      infoData={params}\r\n      systemId={params.systemId}\r\n      id={params.id}\r\n    >\r\n      <standardMaterial\r\n        name={params.name[0]+\"mat\"}\r\n        diffuseColor={new Color3(1, 0, 0)}\r\n        specularColor={new Color3(0, 0, 0)}\r\n      />\r\n      <PlanetTrigger parent={params} moon />\r\n    </Sphere>\r\n    \r\n    <Orbit\r\n    params={position}\r\n    system={props.system}\r\n    /></>\r\n  );\r\n}\r\nfunction PlanetTrigger(props) {\r\n  //console.log(scene)\r\n  //const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  \r\n  \r\n  const PlanetRef = useRef()\r\n  const params = props.parent;\r\n  const context = React.useContext(IDContext)\r\n\r\n  const onSphereCreated = (sphere) => {\r\n    sphere.actionManager = new ActionManager(sphere.getScene());\r\n    const scene = sphere.getScene()\r\n    //Vector3.Distance(scene.cameras[0].position, props.position)\r\n    Gui3D(sphere,scene,params,context)\r\n    sphere.actionManager.registerAction(\r\n      new ExecuteCodeAction(\r\n        ActionManager.OnPickTrigger, (ev)=>{SetTarget(ev.meshUnderPointer,scene,context)})\r\n    );\r\n  }\r\n  useBeforeRender((scene)=>{\r\n    })\r\n  return (\r\n    <Sphere\r\n    ref={PlanetRef}\r\n      name={!props.moon?params.name[0] + \":Trigger\":params.name[0] + \":Trigger\"}\r\n      segments={12}\r\n      diameter={((params.radius+(!props.moon?500000:10000)) * 2) * Scale}\r\n      position={new Vector3(0, 0, 0)}\r\n      infoData={params}\r\n      systemId={params.systemId}\r\n      id={params.id}\r\n      onCreated={onSphereCreated}\r\n      father={params.name[0]}\r\n    >\r\n      <standardMaterial\r\n        name={!props.moon?params.name[0] + \":Trigger mat\":params.name[0] + \":Trigger mat\"}\r\n        alpha=\"0.2\"\r\n        diffuseColor={new Color3(0, 0, 1)}\r\n        specularColor={new Color3(0, 0, 0)}\r\n      />\r\n    </Sphere>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Planets(props) {\r\n  return Object.values(props.data).map((Planet_info) => {\r\n    if (Planet_info.type[0] === \"Planet\") {\r\n      return (\r\n        <TransformNode name={Planet_info.name[0]+\" node\"} key={Planet_info.id}><Planet\r\n          params={Planet_info}\r\n         \r\n          system={Object.values(props.data)}\r\n        />\r\n        <Orbit\r\n      type={\"planet\"}\r\n        params={new Vector3().fromArray(Planet_info.center.map((el) => el * Scale))}\r\n        system={Planet_info}\r\n        />\r\n        {!Planet_info.isInSafeZone?<Pipe info={Planet_info} system={Object.values(props.data)} position={new Vector3().fromArray(Planet_info.center.map((el) => el * Scale))}/>:null}\r\n        \r\n        </TransformNode>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n}\r\n\r\nexport {Planets};\r\n","//import Helios from \"../data/helios.json\" assert { type: \"json\" };\n//const Helios = require(\"../data/helios.json\")\n\nasync function GetAllData(){\n   const fetcher = await fetch('./data/helios.json').then(response => {\n      return response.json();\n\n    }).catch((error)=>console.log(error))\n    return fetcher[0]\n}\n\n\n\n\nfunction GetPlanete(Helios) {\n  var size = 1300;\n  const Planete = [];\n  for (let index = 1; index < size; index++) {\n    if (Helios[index] !== undefined) {\n      if (!Helios[index].name[0].includes(\"Moon\")) {\n        const p = Helios[index];\n        Planete.push(p);\n      }\n    } else {\n      index++;\n    }\n  }\n\n  return Planete;\n}\n\n\nfunction GetMoon(Planete,Helios) {\n  if(Helios){\n  ///console.log(Planete,Helios)\n  const Sat = Planete.satellites;\n  return Sat\n    ? Sat.map((id) => {\n      //console.log(id)\n        const HeliosArray = Object.values(Helios);\n        const Moon = HeliosArray.filter((el) => {\n          return el.type[0].includes(\"Moon\") ? el : null;\n        });\n        return Moon.find((items) => items.id === id);\n      })\n    : null;\n  }\n}\n\n\n\nfunction FindBody(BodyId){\n  return GetAllData().then((helios)=>{\n    const HeliosArray = Object.values(helios)\n    return HeliosArray.find((body)=>body.id === parseInt(BodyId))\n  })\n}\nexport {GetAllData, GetPlanete, GetMoon,FindBody };\n","\r\nimport { FindBody } from './Data';\r\nimport React,{useState,useRef} from \"react\";\r\n\r\nimport { Vector3 } from \"@babylonjs/core\";\r\nimport { Color3} from \"@babylonjs/core/Maths/math.color\";\r\nimport { Ray,RayHelper,MeshBuilder,Mesh, StandardMaterial } from \"babylonjs\";\r\nimport { Line, useBeforeRender } from \"react-babylonjs\";\r\nconst Scale = 0.00005\r\n\r\nfunction ScaleValue(vec3,Scale){\r\n\r\n    return new Vector3(vec3.x*Scale,vec3.y*Scale,vec3.z*Scale)\r\n}\r\nasync function getPoints(coordonner,Scale){\r\n\r\n    return  await parseCoordonner(coordonner).then((result)=>{\r\n        return ScaleValue(result.coordonne, Scale);\r\n    });\r\n\r\n}\r\nfunction formatCoordonne(unformattedCoord) {\r\n    let fields = unformattedCoord.replace(\"::pos{\",\"\").replace(\"}\",\"\").split(',');\r\n    if (fields.length < 5){\r\n        return {error: true};\r\n    }else{\r\n        return {\r\n            error: false,\r\n            systemID: parseInt(fields[0]),\r\n            planetID: parseInt(fields[1]),\r\n            lat: parseFloat(fields[2]),\r\n            long: parseFloat(fields[3]),\r\n            height: parseFloat(fields[4]),\r\n        };\r\n    }\r\n}\r\n\r\nasync function parseCoordonner(coordonner) {\r\n    \r\n    const deg2rad    = Math.PI/180\r\n    //const rad2deg    = 180/Math.PI\r\n    if(typeof coordonner === \"string\" && coordonner.includes(\"::pos\")){\r\n        let formatted = formatCoordonne(coordonner)\r\n            if(!formatted.error && formatted.planetID !== 0){\r\n                return FindBody(formatted.planetID).then((planete)=>{\r\n                    //console.log(planete)\r\n                    let radius = planete.radius;\r\n                    let Center = planete.center\r\n\r\n                    let height = formatted.height\r\n                    let lat = formatted.lat*deg2rad\r\n                    let long = formatted.long*deg2rad\r\n                    let totalDistance =  height + radius;\r\n\r\n                    let globalX = (Center[0] + totalDistance * Math.cos(lat)*Math.cos(long))\r\n                    let globalY = (Center[1] + totalDistance * Math.cos(lat)*Math.sin(long))\r\n                    let globalZ = (Center[2] + totalDistance * Math.sin(lat))\r\n                    return {\r\n                        error: \"false\",\r\n                        message:'Les coordonner ce trouve sur '+planete.name[0],\r\n                        coordonne: new Vector3(globalX,globalY,globalZ)\r\n                    } })}\r\n            else if(!formatted.error && formatted.planetID === 0){\r\n                const promise = new Promise((resolve, reject) => {\r\n                    resolve({\r\n                        error: \"false\",\r\n                        message:\"les coordonner sont dans l'espace\",\r\n                        coordonne: new Vector3(formatted.long,formatted.lat,formatted.height)\r\n                    })\r\n                });\r\n                return promise\r\n\r\n\r\n            }\r\n            \r\n            else{\r\n                const promise = new Promise((resolve, reject) => {\r\n                    resolve({\r\n                        error: \"true\",\r\n                        message:'les coordonner ne sont pas bien formater',\r\n                    })\r\n                });\r\n                return promise\r\n            }\r\n        \r\n        \r\n        \r\n        }\r\n    if (typeof coordonner === \"object\" && coordonner.length > 0){\r\n        \r\n        const promise = new Promise((resolve, reject) => {\r\n            resolve({\r\n                error: \"false\",\r\n                message:'Les coordonner peuvent ne pas correspondre',\r\n                coordonne: new Vector3(coordonner[0],coordonner[1],coordonner[2])\r\n            })\r\n          });\r\n        return promise\r\n    }\r\n    \r\n    else{\r\n        const promise = new Promise((resolve, reject) => {\r\n            resolve({\r\n                error: \"true\",\r\n                message:'les coordonner ne sont pas correcte',\r\n                coordonne: new Vector3(0,0,0)\r\n            })\r\n          });\r\n        return promise\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport  default function InfoUser()\r\n{\r\n\r\n/*    const worldVec = new BABYLON.Vector3(corArriver2.X,corArriver2.Y,corArriver2.Z)\r\nconst coords    = worldVec.subtract(Aliot)\r\nconst distance  = coords.length()\r\nconst altitude  = distance - AliotRadius */\r\nconst [count,setcount] = useState(0)\r\nconst Coordonner = [\r\n    \"::pos{0,2,30.8601,53.3687,-0.0000}\",\r\n    [238425.1186,311031.5552,-125195.9156],\r\n    \"::pos{0,0,1412187.3672,360396.1875,666238.9646}\",\r\n    \"::pos{0,3,-2.5162,-123.9570,13569.2939}\"\r\n]\r\n\r\nuseBeforeRender(async (scene)  => {\r\n    if(count === 0){\r\n        setcount(count+1)\r\n        const points = await Promise.all(Coordonner.map((el)=>getPoints(el,Scale))).then((Points)=>{return Points})\r\n        new MeshBuilder.CreateLines(\"path\",{points:points},scene)\r\n        console.log(\"count\") \r\n        \r\n    }\r\n    \r\n}) \r\n\r\n\r\n return null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState,useRef } from 'react';\r\n\r\nimport {TransformNode,useBeforeRender,Sphere,useScene} from 'react-babylonjs'\r\n\r\nimport {Planets} from './Component/planete';\r\nimport { GetAllData} from './Data';\r\nimport InfoUser from './infoUsers';\r\nimport { Vector3 } from \"@babylonjs/core\";\r\nimport { Color3 } from \"@babylonjs/core/Maths/math.color\";\r\nconst Scale = 0.00005;\r\nconst centerMap = new Vector3(0*Scale, 24000000*Scale, 0*Scale)\r\nfunction SafeZone(){\r\n  const safezonestate = useRef(null)\r\n  //\r\n  const [Hide,setHide] = useState(true)\r\n  \r\n    const centerSafeZone = new Vector3(13771471*Scale,7364470.4372*Scale,-128971*Scale)\r\n    //position approximative\r\n    /* const safezonegeometry = new THREE.SphereGeometry( 36000000*Scale, 17, 17 );//position approximative\r\n    //geometry.position =new THREE.Vector3(centerMap.x,centerMap.y,centerMap.z)*/\r\n    //\r\n  //setHide(console.log())\r\n    useBeforeRender(() => {\r\n      //\r\n      setHide(document.getElementById('Safezone').checked)\r\n      \r\n    });\r\n\r\n  const Radius = 90 * 200000\r\n\r\n  return <Sphere\r\n  ref={safezonestate}\r\n  name={\"SafeZone Trigger\"}\r\n  segments={12}\r\n  diameter={(Radius*2)*Scale}\r\n  position={centerSafeZone}\r\n  setEnabled={Hide}\r\n  computeWorldMatrix={true}\r\n  isPickable={false}\r\n>\r\n  <standardMaterial\r\n    name={\"SafeZone Trigger mat\"}\r\n    alpha=\"0.5\"\r\n    diffuseColor={new Color3(0, 0, 1)}\r\n    specularColor={new Color3(0, 0, 0)}\r\n  />\r\n</Sphere>\r\n}\r\n\r\nfunction Sun(){\r\n \r\n  const centerSafeZone = new Vector3(13771471*Scale,7364470.4372*Scale,-128971*Scale)\r\n  //position approximative\r\n  /* const safezonegeometry = new THREE.SphereGeometry( 36000000*Scale, 17, 17 );//position approximative\r\n  //geometry.position =new THREE.Vector3(centerMap.x,centerMap.y,centerMap.z)*/\r\n\r\n\r\nreturn <Sphere\r\nname={\"Sun\"}\r\nsegments={12}\r\ndiameter={1000000*Scale}\r\nposition={centerMap}\r\n\r\n>\r\n<standardMaterial\r\n  name={\"Sun mat\"}\r\n  alpha=\"0.5\"\r\n  diffuseColor={new Color3(0, 0, 1)}\r\n  specularColor={new Color3(0, 0, 0)}\r\n/>\r\n</Sphere>\r\n}\r\n\r\n\r\n\r\n\r\nexport default function Helios(){\r\n    const [data,setdata] = useState(null)\r\n    const [loaded,setLoaded] = useState(false) \r\n    const beforeMount = useRef(false);\r\n  const Scene = useScene();\r\n  if (Scene&&beforeMount.current === false) {\r\n    console.log(\"mount\")\r\n  beforeMount.current = true;\r\n  const engine = Scene.getEngine();\r\n  Scene.debugLayer.show();\r\n  const options = {\r\n    autoStart: false,\r\n    clearBeforeRender: false,\r\n    context: engine._gl, // ._gl is public **hidden**\r\n    height: engine.getRenderHeight(),\r\n    // roundPixels: true, available PIXI < 5.0\r\n    view: engine.getRenderingCanvas(),\r\n    width: engine.getRenderWidth()\r\n  }\r\n  \r\n}\r\n    InfoUser()\r\n    \r\n    \r\n    \r\n    useBeforeRender(() => {\r\n        if(data === null && loaded=== false){\r\n            GetAllData().then((HeliosSystem)=>{setdata(HeliosSystem);setLoaded(true)})\r\n            \r\n        }\r\n        //console.log(\"loading\")\r\n      });\r\n      \r\n    return loaded&&(<TransformNode name=\"Helios\" >\r\n                                <Planets data={data} />\r\n                                <SafeZone/>\r\n            </TransformNode>)\r\n}","import React ,{useRef}from 'react';\r\n\r\nimport Helios from './Helios';\r\nimport { ArcRotateCamera, Scene,useScene} from 'react-babylonjs'\r\nimport { Vector3,Color3,  } from '@babylonjs/core';\r\nimport \"@babylonjs/core/Debug/debugLayer\"; // Augments the scene with the debug methods\r\nimport \"@babylonjs/inspector\"; // Injects a local ES6 version of the inspector to prevent automatically relying on the none compatible version\r\n\r\n\r\nexport default function Viewer(){ \r\n  \r\n   return (\r\n           <Scene name=\"Helios\" ambientColor={new  Color3(1, 1, 1)} clearColor={new Color3.Black()}>\r\n                <ArcRotateCamera\r\n          name=\"camera1\"\r\n          target={Vector3.Zero()}\r\n          alpha={Math.PI / 3}\r\n          beta={Math.PI / 4}\r\n          radius={8}\r\n          minZ={1} maxZ={100000} lowerRadiusLimit={10} wheelPrecision={0.5}\r\n        />\r\n            \r\n            <hemisphericLight name=\"light1\" intensity={0.7} direction={Vector3.Up()} />\r\n              <Helios/>\r\n            \r\n          </Scene>\r\n        )\r\n    }","import React, { Component, useState } from \"react\";\r\n\r\n//{propriétés:\"value\"}\r\n\r\nexport default class ReactDatGui extends Component {\r\n  static String(props) {\r\n    const lang = props.src.lang\r\n    const obj = Object.values(props.src)[0]\r\n    const property = Object.keys(props.src)[0]\r\n    const value = obj[property.toLowerCase()]\r\n    //console.log(props,value[lang])\r\n\r\n   \r\n    return (\r\n      <li className={\"\"}>\r\n        <span className=\"property-name\">{property}</span>\r\n        <span className=\"c\">{obj.hasOwnProperty(property.toLowerCase())?value[lang]:null}</span>\r\n      </li>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  static Boolean(props) {\r\n    \r\n    const lang = props.src.lang\r\n    const obj = Object.values(props.src)[0]\r\n    const property = Object.keys(props.src)[0]\r\n    const value = obj[Object.keys(obj).find((el)=>el.match(property.replace(/ /g, \"\")))]\r\n    //console.log(props)\r\n    return (\r\n      <li className={\"cr boolean\"}>\r\n        <div>\r\n          <span className=\"property-name\">{property}</span>\r\n          <div className=\"c\">\r\n            <span className=\"c\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={value ? true : false}\r\n                onChange={()=>{return false}}\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  static Folder(props) {\r\n    const [hide, sethide] = useState(props.close);\r\n    \r\n    return (\r\n      <li className=\"folder \">\r\n        <div\r\n          className=\" title\"\r\n          onClick={(e) => {\r\n            e.target.innerText === props.title && sethide(!hide);props.onChange !== undefined&&props.onChange(hide);\r\n          }}\r\n        >\r\n          <ul className={hide ? \"closed\" : null}>\r\n            <li className=\"title\">{props.title}</li>\r\n            {props.children}\r\n          </ul>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n","import React, {useEffect, useState,useContext } from \"react\";\r\nimport * as dat from 'dat.gui';\r\nimport \"./dat.css\"\r\nimport {GetAllData} from '../Viewer/Data'\r\n\r\nimport { IDContext } from \"../context\"\r\nimport ReactDatGui from \"./ReactDatComponent/component\";\r\nconst lang = 1\r\n\r\n\r\n\r\n\r\nfunction DatGUI(props){\r\nconst [hide,sethide] = useState({main:null})\r\nconst [data,setdata] = useState(null)\r\nconst [image,setimage] = useState(null)\r\n\r\nconst [ID,SetID] = useState(1)\r\n\r\n\r\nfunction getKeyByValue(object, value) {\r\n  return Object.keys(object).find(key => object[key] === value);\r\n}\r\nconst IDs = useContext(IDContext).id\r\nuseEffect(() => {\r\n  GetAllData().then((HeliosSystem)=>{setdata(Object.values(HeliosSystem))});\r\n  img().then((img)=>{setimage(img)})\r\n  data&&SetID(getKeyByValue(data, data.find((el)=>el.id === IDContext._currentValue.id)))\r\n  \r\n}, [IDs,ID]);\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction close(element){\r\n  \r\n  hide[element] !== \"closed\"?sethide({\r\n    ...hide,\r\n    [element]:\"closed\",\r\n  }):sethide({\r\n    ...hide,\r\n    [element]:null,\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\nfunction OreToType(Ore){\r\n  const T1 = [\r\n    [\"Bauxite\", \"Bauxite\", \"Bauxit\"],\r\n    [\"Coal\", \"Charbon\", \"Kohle\"],\r\n    [\"Quartz\", \"Quartz\", \"Quarz\"],\r\n    [\"Hematite\", \"Hématite\", \"Hämatit\"]\r\n  ]\r\n  const T2 = [\r\n    [\"Natron\", \"Natron\", \"Soda\"],\r\n    [\"Chromite\", \"Chromite\", \"Chromit\"],\r\n    [\"Limestone\", \"Calcaire\", \"Kalkstein\"],\r\n    [\"Malachite\", \"Malachite\", \"Malachit\"]\r\n  ]\r\n  const T3 = [\r\n    [\"Garnierite\", \"Garniérite\", \"Garnierit\"],\r\n    [\"Acanthite\", \"Acanthite\", \"Akanthit\"],\r\n    [\"Petalite\", \"Pétalite\", \"Petalit\"],\r\n    [\"Pyrite\", \"Pyrite\", \"Pyrit\"]\r\n  ]\r\n  \r\n  const T4 = [\r\n    [\"Cryolite\", \"Cryolite\", \"Kryolith\"],\r\n    [\"Cobaltite\", \"Cobaltite\", \"Cobaltit\"],\r\n    [\"Kolbeckite\", \"Kolbeckite\", \"Kolbeckit\"],\r\n    [\"Gold nuggets\", \"Pépites d'or\", \"Goldnuggets\"]\r\n  ]\r\n  \r\n\r\n  const T5 = [\r\n    [\"Columbite\", \"Columbite\", \"Columbit\"],    \r\n    [\"Vanadinite\", \"Vanadinite\", \"Vanadinit\"],\r\n    [\"Ilmenite\", \"Ilménite\", \"Ilmenit\"],\r\n    [\"Rhodonite\", \"Rhodonite\", \"Rhodonit\"]\r\n  ]\r\n\r\n\r\n\r\n\r\nreturn T1.find((el)=>el[0] === Ore[0])?\"Tier 1\":T2.find((el)=>el[0] === Ore[0])?\"Tier 2\":T3.find((el)=>el[0] === Ore[0])?\"Tier 3\":T4.find((el)=>el[0] === Ore[0])?\"Tier 4\":T5.find((el)=>el[0] === Ore[0])?\"Tier 5\":null\r\n}\r\n\r\n\r\n\r\n function OreToTypeClassName(string){\r\n  \r\n  return \"T\"+string[string.length-1]\r\n\r\n}\r\nfunction compare( a, b ) {\r\n  if ( a.props.children[0].props.children < b.props.children[0].props.children ){\r\n    return -1;\r\n  }\r\n  if ( a.props.children[0].props.children > b.props.children[0].props.children ){\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n//objs.sort( compare );\r\n\r\n\r\n\r\nasync function  img(){\r\n\r\nconst img = await fetch('./data/image.json').then(response => {\r\n  return response.json();\r\n\r\n\r\n}).catch((error)=>console.log(error))\r\n\r\nreturn img\r\n\r\n}\r\n\r\n\r\n\r\nfunction GetImage(name){\r\nreturn name.includes(\"Moon\")?image&&image[\"generic moon\"]:image&&image[name]}\r\n//data!== null&&console.log(data)\r\n\r\n const [descriptionhide,setdescriptionhide]=useState(true)\r\n const [Orehide,setOrehide]=useState(true)\r\n\r\n\r\nconst [display,setdisplay] = useState({Safezone:false,pipe:false,orbit:false})\r\n\r\n\r\nreturn data!== null&&(\r\n  \r\n  <div className=\"dg ac\" onLoad={(e)=>{\r\n    setInterval(()=>{\r\n      SetID(getKeyByValue(data, data.find((el)=>el.id === IDContext._currentValue.id))) \r\n    },100)\r\n\r\n\r\n  }}>\r\n    <div className=\"dg main a\" id=\"gui\" style={{width:\"245px\",marginTop:\"20px\"}}>\r\n      <div\r\n        style={{\r\n          width: \"245px\",\r\n          marginLeft: \"-3px\",\r\n          cursor: \"ew-resize\",\r\n          position: \"absolute\",\r\n          overflowX: \"hidden\",\r\n          maxHeight: \"90vh\",\r\n          paddingBottom:\"28px\" ,\r\n        }}\r\n      >\r\n        {/* <input id=\"PlanetID\" type=\"text\" value={IDs}/> */}\r\n    <ul className={hide.main} >\r\n    <ReactDatGui.Folder title=\"Description\" close onChange={(e)=>{setdescriptionhide(!descriptionhide)}}>\r\n<li className=\"cr string\"  style={{height:descriptionhide?0:\"auto\"}}  >\r\n  <h3>{data[ID].name[lang]}</h3>\r\n  <img style={{width:\"100%\",height:\"auto\"}} alt=\"Planet\" src={\"https://\"+GetImage(data[ID].name[0])}/>\r\n    <span style={{ display: \"flex\", height: \"100%\", width: \"100%\" }}>\r\n    {data[ID].description?data[ID].description[lang]:\"\"}\r\n    </span>\r\n</li>\r\n</ReactDatGui.Folder>\r\n<ReactDatGui.Folder title=\"Info\" close>\r\n              <ReactDatGui.String src={{Type:data[ID], lang:lang}}/>\r\n              <ReactDatGui.String src={{Classification:data[ID], lang:lang}}/>\r\n\r\n              <ReactDatGui.String src={{Biosphere:data[ID],lang:lang}}/>\r\n               <ReactDatGui.String src={{Habitability:data[ID],lang:lang}}/>\r\n\r\n              <ReactDatGui.Boolean src={{Atmosphere:data[ID]}}/>\r\n              <ReactDatGui.Boolean src={{\"In Safe Zone\":data[ID]}}/>\r\n      </ReactDatGui.Folder>\r\n\r\n\r\n<ReactDatGui.Folder title=\"Ores\" close onChange={(e)=>{setOrehide(!Orehide)}}>\r\n              <li className=\"cr\" style={{height:Orehide?0:\"auto\"}} >\r\n                {data[ID].ores.map((el)=>(\r\n                <div key={el[0]} className=\"cr\" >\r\n                  <span className={\"property-name Ores \"+OreToTypeClassName(OreToType(el))}>{OreToType(el)}</span>\r\n                  <span className=\" c\">{el[lang]}</span>\r\n                </div>)).sort(compare)}\r\n              </li>\r\n</ReactDatGui.Folder>\r\n<ReactDatGui.Folder title=\"System\" close>\r\n<li className=\"cr boolean\">\r\n          <div>\r\n            <span className=\"property-name\">Toggle SafeZone</span>\r\n            <div className=\"c\">\r\n              <input id=\"Safezone\" type=\"checkbox\"  checked={display.Safezone} onChange={()=>{setdisplay({...display,Safezone:!display.Safezone})}}/>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        <li className=\"cr boolean\">\r\n          <div>\r\n            <span className=\"property-name\">Toggle Pipe</span>\r\n            <div className=\"c\">\r\n              <input id=\"pipe\" type=\"checkbox\" checked={display.pipe} onChange={()=>{setdisplay({...display,pipe:!display.pipe})}}/>\r\n            </div>\r\n          </div>\r\n</li>\r\n<li className=\"cr boolean\">\r\n          <div>\r\n            <span className=\"property-name\">Toggle Orbit</span>\r\n            <div className=\"c\">\r\n              <input id=\"Orbit\" type=\"checkbox\" checked={display.orbit} onChange={()=>{setdisplay({...display,orbit:!display.orbit})}}/>\r\n            </div>\r\n          </div>\r\n</li>\r\n  \r\n</ReactDatGui.Folder>\r\n\r\n      </ul>\r\n      <div className=\"close-button close-bottom\" style={{ width: \"245px\" }} onClick={()=>{close(\"main\")}}>\r\n        {hide.main === null?\"Close\":\"Open\"}\r\n      </div>\r\n      \r\n      \r\n      \r\n      \r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {DatGUI}\r\n","import React, { Component } from 'react';\r\nimport { Engine } from 'react-babylonjs'\r\nimport Viewer from './Viewer/'; \r\nimport {DatGUI} from './components/ReactDatGui'\r\nimport { IDContext } from './context'\r\n\r\n\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: 0, height: 0};\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  \r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n       \r\n      <Engine antialias={true} width={this.state.width} height={this.state.height} adaptToDeviceRatio={true} canvasId=\"sample-canvas\" debug={true}>\r\n        \r\n        <Viewer />\r\n      \r\n      </Engine>\r\n      <DatGUI/>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  \r\n}\r\nApp.contextType = IDContext;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}